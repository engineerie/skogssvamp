import{_ as Q}from"./ListBoxRow.6d69b9ae.js";import X from"./Icon.67142c96.js";import{s as U,v as R,o as r,c as g,u as T,q,A as D,a as e,x as j,d as $,t as E,y as O,b as m,_ as Z,r as u,B as P,n as V,w as C,F as H,z as ee,C as se,p as te,e as oe,D as ne,E as ae,G as le,h as F}from"./entry.c3f902cc.js";import{u as J}from"./config.9f0b61bb.js";import{_ as W}from"./BaseHeading.vue.57323826.js";import{_ as re}from"./BaseParagraph.vue.ef8080ab.js";import{u as ce}from"./titleStore.e63b635d.js";import{u as ie}from"./comparisonStore.47f72298.js";const ue={key:0,class:"nui-message-icon-outer"},de={class:"nui-message-inner-text"},pe=U({__name:"BaseMessage",props:{type:{default:"success"},shape:{default:void 0},message:{default:""},icon:{type:[Boolean,String],default:!1},closable:{type:Boolean,default:!1},closeIcon:{default:"lucide:x"}},emits:["close"],setup(d,{emit:c}){const t=d,s=J(),a=R(()=>{var y;return t.shape??((y=s.nui.defaultShapes)==null?void 0:y.message)}),o={straight:"",rounded:"nui-message-rounded",smooth:"nui-message-smooth",curved:"nui-message-curved",full:"nui-message-full"},h={default:"nui-message-default",muted:"nui-message-muted",primary:"nui-message-primary",info:"nui-message-info",success:"nui-message-success",warning:"nui-message-warning",danger:"nui-message-danger"},f={info:"akar-icons:info-fill",warning:"ci:warning",danger:"ph:warning-octagon-fill",success:"carbon:checkmark-filled",primary:"",muted:"",default:""},v=R(()=>typeof t.icon=="string"?t.icon:f[t.type]);return(y,x)=>{const S=X;return r(),g("div",{class:O(["nui-message",[T(a)&&o[T(a)],h[t.type]]])},[t.icon?(r(),g("div",ue,[T(v)?(r(),q(S,{key:0,name:T(v),class:"nui-message-icon"},null,8,["name"])):D("",!0)])):D("",!0),e("span",de,[j(y.$slots,"default",{},()=>[$(E(t.message),1)])]),t.closable?(r(),g("button",{key:1,type:"button",tabindex:"0",class:O(["nui-message-close",[T(a)&&o[T(a)]]]),onClick:x[0]||(x[0]=l=>c("close"))},[j(y.$slots,"close-button",{},()=>[m(S,{name:y.closeIcon,class:"nui-close-icon"},null,8,["name"])])],2)):D("",!0)],2)}}});const Y=d=>(te("data-v-0d6056ff"),d=d(),oe(),d),_e={class:"p-6 bg-neutral-100 dark:bg-neutral-800 dark:bg-opacity-100 border-[1px] dark:border-stone-700 border-stone-300 rounded-xl"},me={id:"scrollbar",class:"overscroll overflow-y-scroll h-96"},ge={key:0},he={class:"w-full text-sm text-left table-auto"},fe=Y(()=>e("thead",{class:"bg-neutral-100 dark:bg-neutral-800 sticky top-0 dark:text-neutral-500 text-neutral-500 drop-shadow-sm"},[e("tr",null,[e("th",{class:"py-3"}),e("th",{class:"py-3"},"Taxon"),e("th",{class:"px-6 py-3"},"Swedish name"),e("th",{class:"px-6 py-3"},"Edible")])],-1)),ve={class:"py-2 px-2"},ye={class:"py-2 text-neutral-500"},be={class:"px-6 text-neutral-500"},xe={class:"px-6"},$e={key:0,class:"bg-yellow-500 rounded-full w-4 h-4"},ke={key:1},we=Y(()=>e("p",null,"No data available",-1)),Ce=[we],Se={__name:"EDNATable",setup(d){const c=u(null),t=u([]),s=P();return V(async()=>{const{geography:a,forestType:o,vegetationType:h,standAge:f}=s.query,y=await(await fetch(`/api/fetchData?geography=${a}&forestType=${o}&vegetationType=${h}&standAge=${f}`)).json();c.value=y.data;const x=(n,i,p)=>{const b=(i[0]-n[0])/(p-1),N=(i[1]-n[1])/(p-1),z=(i[2]-n[2])/(p-1),M=[];for(let _=0;_<p;_++){const I=Math.round(n[0]+b*_),L=Math.round(n[1]+N*_),A=Math.round(n[2]+z*_);M.push(`rgb(${I},${L},${A})`)}return M},S=x([82,82,82],[212,212,212],4),l=x([22,101,52],[134,239,172],10),k=x([46,16,101],[232,121,249],c.value.length-14);t.value=[...S,...l,...k]}),(a,o)=>{const h=W;return r(),g("div",_e,[m(h,{size:"md",class:"mb-4"},{default:C(()=>[$("Species list from e-DNA data")]),_:1}),e("div",me,[c.value?(r(),g("div",ge,[e("table",he,[fe,e("tbody",null,[(r(!0),g(H,null,ee(c.value,(f,v)=>(r(),g("tr",{key:f.taxon,class:"border-b border-stone-200 dark:border-stone-700"},[e("td",ve,[e("div",{style:se({backgroundColor:t.value[v]}),class:"rounded-full w-4 h-4"},null,4)]),e("td",ye,E(f.taxon),1),e("td",be,E(f.snamn),1),e("td",xe,[f.matsvamp===1?(r(),g("div",$e)):D("",!0)])]))),128))])])])):(r(),g("div",ke,Ce))])])}}},Te=Z(Se,[["__scopeId","data-v-0d6056ff"]]),Me={class:"p-6 bg-neutral-100 dark:bg-neutral-800 dark:bg-opacity-100 border-[1px] dark:border-stone-700 border-stone-300 rounded-xl"},Ee={key:0},Be=e("hr",{class:"border-stone-200 dark:border-stone-700"},null,-1),Re={class:"flex justify-between mt-2"},Ae={class:"flex items-center"},De=e("div",{class:"bg-neutral-500 rounded-full w-2 h-2 mr-1"},null,-1),ze={class:"flex items-center"},Ie=e("div",{class:"bg-green-500 rounded-full w-2 h-2 mr-1"},null,-1),Le={class:"flex items-center"},Ne=e("div",{class:"bg-violet-500 rounded-full w-2 h-2 mr-1"},null,-1),Fe={key:1},Pe=e("p",null,"Loading...",-1),qe=[Pe],je={__name:"DonutChart",setup(d){const c=ne(null);let t=0;const s=u(null),a=P(),o=u(0),h=u(0),f=u(0),v=u(0),y=u(0),x=u(0),S=(n,i,p)=>{const b=(i[0]-n[0])/(p-1),N=(i[1]-n[1])/(p-1),z=(i[2]-n[2])/(p-1),M=[];for(let _=0;_<p;_++){const I=Math.round(n[0]+b*_),L=Math.round(n[1]+N*_),A=Math.round(n[2]+z*_);M.push(`rgb(${I},${L},${A})`)}return M},l=u({tooltip:{y:{formatter:function(n){return`${(n/t*100).toFixed(2)}%`}}},labels:[],legend:{show:!1},plotOptions:{pie:{expandOnClick:!1,donut:{size:"85%",labels:{show:!0,name:{show:!1},value:{show:!0,fontSize:"33px",fontFamily:"Inter, sans-serif",fontWeight:500,color:"#737373"},total:{showAlways:!0,show:!0,formatter:function(){return`${s.value.length}`}}}}}},dataLabels:{enabled:!1},stroke:{show:!1,width:.3,colors:["#737373"]},colors:[]}),k=u([]);return u([]),V(async()=>{{const M=await ae(()=>import("./vue3-apexcharts.common.fbb5f429.js").then(_=>_.v),["./vue3-apexcharts.common.fbb5f429.js","./entry.c3f902cc.js"],import.meta.url);c.value=M.default}const{geography:n,forestType:i,vegetationType:p,standAge:b}=a.query,z=await(await fetch(`/api/fetchData?geography=${n}&forestType=${i}&vegetationType=${p}&standAge=${b}`)).json();if(s.value=z.data,s.value){t=s.value.reduce((w,B)=>w+B.total_presence,0),s.value.sort((w,B)=>B.total_presence-w.total_presence);const M=S([82,82,82],[212,212,212],4),_=S([22,101,52],[134,239,172],10),I=S([46,16,101],[232,121,249],s.value.length-14),L=[...M,..._,...I];k.value=s.value.map(w=>w.total_presence),l.value.labels=s.value.map(w=>w.taxon),l.value.colors=L;const A=s.value.slice(0,4).reduce((w,B)=>w+B.total_presence,0),G=s.value.slice(4,14).reduce((w,B)=>w+B.total_presence,0),K=t-A-G;o.value=(A/t*100).toFixed(2),h.value=(G/t*100).toFixed(2),f.value=(K/t*100).toFixed(2),v.value=s.value.slice(0,4).length,y.value=s.value.slice(4,14).length,x.value=s.value.length-v.value-y.value}}),(n,i)=>{const p=W,b=re;return r(),g("div",Me,[m(p,{size:"md",class:"mb-4"},{default:C(()=>[$("Species Count")]),_:1}),c.value&&s.value?(r(),g("div",Ee,[m(T(c),{type:"donut",options:l.value,series:k.value,class:"mb-4"},null,8,["options","series"]),Be,e("div",Re,[e("div",null,[m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(v.value)+" species",1)]),_:1}),e("div",Ae,[De,m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(o.value)+"%",1)]),_:1})])]),e("div",null,[m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(y.value)+" species",1)]),_:1}),e("div",ze,[Ie,m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(h.value)+"%",1)]),_:1})])]),e("div",null,[m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(x.value)+" species",1)]),_:1}),e("div",Le,[Ne,m(b,{size:"sm",class:"text-neutral-500"},{default:C(()=>[$(E(f.value)+"%",1)]),_:1})])])])])):(r(),g("div",Fe,qe))])}}},Oe=je,Ve=le({id:"dashboardInfoStore",state:()=>({RedListedMessage:""}),actions:{updateRedListedMessage(d){this.RedListedMessage=d},updateEnvironmentMessage(d){this.EnvironmentMessage=d}}}),Ge=U({__name:"BaseProse",props:{shape:{default:void 0}},setup(d){const c=d,t=J(),s=R(()=>{var o;return c.shape??((o=t.nui.defaultShapes)==null?void 0:o.progress)}),a={straight:"nui-prose-straight",rounded:"nui-prose-rounded",curved:"nui-prose-curved"};return(o,h)=>(r(),g("div",{class:O(["nui-prose",T(s)&&a[T(s)]])},[j(o.$slots,"default")],2))}}),Ue={class:"p-5 bg-neutral-100 dark:bg-neutral-800 dark:bg-opacity-100 border-[1px] dark:border-stone-700 border-stone-300 rounded-xl"},He=["src"],Je={__name:"EnvironmentImage",setup(d){const c=P(),t=R(()=>{const{geography:s,forestType:a,vegetationType:o,standAge:h}=c.query;if(s&&a&&o&&h){const v=`/images/${`${s}-${a}-${o}-${h}`.toLowerCase().replace(/\+/g," ").split(" ").join("_").replace(/-+/g,"_").replace(/<+/g,"").replace(/>+/g,"")}.png`;return console.log("Returning dynamic URL:",v),v}return console.log("Returning null"),null});return(s,a)=>{const o=Ge;return r(),g("div",Ue,[e("img",{src:t.value,class:"rounded-xl p-6 dark:bg-violet-200 bg-violet-100 dark:bg-opacity-80"},null,8,He),m(o,{size:"lg",weight:"semibold",class:"mt-4"},{default:C(()=>[$("North - Pine - Lingon - 41-90")]),_:1})])}}},We=Je,Ye={class:"grid grid-cols-4 grid-rows-5 gap-4"},Ke={class:"col-span-2"},Qe={class:""},Xe={class:"row-span-2 col-start-4"},Ze={__name:"DashboardC",setup(d){const c=ie(),t=P(),s=u(t.query),a=ce(),o=Ve(),h=R(()=>c.duplicateEnvironment),f=u(!1),v=u(o.RedListedMessage),y=u(o.EnvironmentMessage),x=R(()=>{const l={},k=[];for(const[n,i]of Object.entries(s.value))k.push(l[i]||i);return k.join(", ")}),S=R(()=>JSON.stringify(t.query));return F(S,(l,k)=>{console.log("Query changed",l,k),l!==k&&(console.log("Calling clearDuplicateFlag"),c.clearDuplicateFlag())}),F(x,l=>{a.setTitle(l)}),V(()=>{a.setTitle(x.value)}),F(v,l=>{console.log("Red Listed Message changed:",l)}),F(y,l=>{console.log("Environment Message changed:",l)}),(l,k)=>{const n=Q,i=pe,p=Te,b=Oe;return r(),g(H,null,[m(n,{class:"mb-4"}),f.value?(r(),q(i,{key:0,type:"primary"},{default:C(()=>[$(" You can compare max five environments at the time. ")]),_:1})):D("",!0),T(h)?(r(),q(i,{key:1,type:"warning"},{default:C(()=>[$(" This environment has already been added to your comparison view. ")]),_:1})):D("",!0),e("div",Ye,[e("div",Ke,[m(p)]),e("div",Qe,[m(b)]),e("div",Xe,[m(We)])])],64)}}},cs=Ze;export{cs as _};
